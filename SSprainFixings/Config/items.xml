<!--
Sam's Sprain Fixings
v19.2.1
by saminal
untested, good luck

items.xml
-->

<configs>
	<remove xpath="items/item[@name='medicalBandage']"/>
	<insertBefore xpath="items/item[@name='medicalFirstAidBandage']">
		<item name="medicalBandage">
			<property name="Tags" value="medical"/>
			<property name="DisplayType" value="medical"/>
			<property name="HoldType" value="64"/>
			<property name="Meshfile" value="#Other/Items?Health/bandage.fbx"/>
			<property name="DropMeshfile" value="#Other/Items?Misc/sack_droppedPrefab.prefab"/>
			<property name="Material" value="Mcloth"/>
			<property name="Stacknumber" value="10"/> <!-- STK medical -->
			<property name="FuelValue" value="1"/>
			<property name="Weight" value="5"/>
			<property name="EconomicValue" value="5"/>
			<property name="Group" value="Science,Medical,Basics"/>
			<property name="DescriptionKey" value="medicalBandageDesc"/>
			<property class="Action0">
				<property name="Class" value="Eat"/>
				<property name="Delay" value="1.0"/>
				<property name="Use_time" value="..."/>
				<property name="Sound_start" value="player_bandage"/>
				<!-- requirement name="CVarCompare" cvar="lacerationBleedingStatus" operation="GTE" value="2"/ -->
			</property>
			<property class="Action1">
				<property name="Class" value="UseOther"/>
				<property name="Delay" value="1.0"/>
				<property name="Use_time" value="..."/>
				<property name="Sound_start" value="player_bandage"/>
			</property>
			<effect_group name="Primary Action" tiered="false"> <!-- stop bleeding -->
				<requirement name="HasBuff" buff="buffInjuryBleeding"/>			
					<triggered_effect trigger="onSelfPrimaryActionEnd" action="RemoveBuff" buff="buffInjuryBleeding"/><display_value name="dStopsBleeding" value="1"/>
					<triggered_effect trigger="onSelfSecondaryActionEnd" action="RemoveBuff" target="other" buff="buffInjuryBleeding"/>
					<triggered_effect trigger="onSelfSecondaryActionEnd" action="GiveExp" exp="10"/>
			</effect_group>

			<effect_group name="Primary Action" tiered="false"> <!-- wrap -->
				<requirement name="HasBuff" buff="buffLegSprained"/>
					<triggered_effect trigger="onSelfPrimaryActionEnd" action="AddBuff" buff="buffLegWrapped"/>
			</effect_group>

			<effect_group name="Primary Action" tiered="false"> <!-- wrap -->
				<requirement name="HasBuff" buff="buffArmSprained"/>
					<triggered_effect trigger="onSelfPrimaryActionEnd" action="AddBuff" buff="buffArmWrapped"/>
			</effect_group>

			<effect_group name="Secondary Action" tiered="false"> <!-- stop other bleeding -->
				<triggered_effect trigger="onSelfSecondaryActionEnd" action="RemoveBuff" target="other" buff="buffInjuryBleeding"/>
				<triggered_effect trigger="onSelfSecondaryActionEnd" action="GiveExp" exp="10"/>
			</effect_group>

			<effect_group name="Secondary Action" tiered="false"> <!-- wrap other leg -->
				<requirement name="HasBuff" buff="buffLegSprained"/>
					<triggered_effect trigger="onSelfSecondaryActionEnd" action="AddBuff" target="other" buff="buffLegWrapped"/>
			</effect_group>

			<effect_group name="Secondary Action" tiered="false"> <!-- wrap other arm -->
				<requirement name="HasBuff" buff="buffArmSprained"/>
					<triggered_effect trigger="onSelfSecondaryActionEnd" action="AddBuff" target="other" buff="buffArmWrapped"/>
			</effect_group>
			
			<effect_group tiered="false">
				<!-- medical XP gains -->
				<triggered_effect trigger="onSelfPrimaryActionEnd" action="GiveExp" exp="10"/>
				<triggered_effect trigger="onSelfPrimaryActionEnd" action="GiveExp" exp="4">
					<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="Equals" value="1"/>
				</triggered_effect>
						<triggered_effect trigger="onSelfPrimaryActionEnd" action="GiveExp" exp="6">
					<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="Equals" value="2"/>
				</triggered_effect>
				<triggered_effect trigger="onSelfPrimaryActionEnd" action="GiveExp" exp="8">
					<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="Equals" value="3"/>
				</triggered_effect>
						<triggered_effect trigger="onSelfPrimaryActionEnd" action="GiveExp" exp="10">
					<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="Equals" value="4"/>
				</triggered_effect>
			</effect_group>

			<effect_group tiered="false">
				<!-- medical XP secondary action gains -->
				<triggered_effect trigger="onSelfSecondaryActionEnd" action="GiveExp" exp="10"/>
				<triggered_effect trigger="onSelfSecondaryActionEnd" action="GiveExp" exp="4">
					<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="Equals" value="1"/>
				</triggered_effect>
						<triggered_effect trigger="onSelfSecondaryActionEnd" action="GiveExp" exp="6">
					<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="Equals" value="2"/>
				</triggered_effect>
				<triggered_effect trigger="onSelfSecondaryActionEnd" action="GiveExp" exp="8">
					<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="Equals" value="3"/>
				</triggered_effect>
						<triggered_effect trigger="onSelfSecondaryActionEnd" action="GiveExp" exp="10">
					<requirement name="ProgressionLevel" progression_name="perkPhysician" operation="Equals" value="4"/>
				</triggered_effect>
			</effect_group>
		</item>
	</insertBefore>
</configs>